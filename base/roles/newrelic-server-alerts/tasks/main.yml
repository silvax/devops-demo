---
# This role can be called by service configure.yml playbooks
# to add a server to the correct server alert policy. It can be used in two
# ways:
#
# If the server alert policy name is the same as the server's role:
# - newrelic-server-alerts
#
# Otherwise the server alert policy name can be passed explicitly:
# - { role: newrelic-server-alerts, newrelic_server_alert_policy: "my_policy_name" }

- name: create newrelic_server_alerts directory
  file: name=/opt/newrelic_server_alerts state=directory

- name: copy server alerts script to /opt/newrelic_server_alerts
  copy: src=server_alerts.py dest=/opt/newrelic_server_alerts/server_alerts.py mode=0755

- name: template shell script that executes the python script
  template: src=server_alerts.sh dest=/opt/newrelic_server_alerts/server_alerts.sh mode=0700

- name: create entry to run cron job once an hour that removes servers as they age out 
  cron: name="newrelic server alerts" minute="{{ 59 |random(0,1)}}" cron_file=newrelic_server_alerts user=root job="/opt/newrelic_server_alerts/server_alerts.sh >> /var/log/newrelic_server_alerts.log 2>&1"

- name: create entry to run cron job on reboot for opsworks
  cron: name="newrelic server alerts at boot" special_time=reboot cron_file=newrelic_server_alerts user=root job="/opt/newrelic_server_alerts/server_alerts.sh >> /var/log/newrelic_server_alerts.log 2>&1"

- name: set active servers in the server alert policy
  shell: /opt/newrelic_server_alerts/server_alerts.sh >> /var/log/newrelic_server_alerts.log 2>&1
  ignore_errors: yes

- name: copy the logrotate file
  copy: src=newrelic_server_alerts_log dest=/etc/logrotate.d/newrelic_server_alerts_log
